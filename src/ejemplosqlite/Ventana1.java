/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplosqlite;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brais Núñez
 */
public class Ventana1 extends javax.swing.JFrame {

    String jug[] = new String[4];
    String datosTabla[] = new String[4];
    Jugador jugador = new Jugador();
    Statement st;
    ResultSet resultado;
    DefaultTableModel modeloTabla;
    
    /**
     * Creates new form Ventana1
     */
    public Ventana1() {
        initComponents();
        Conexiones conexion1 = new Conexiones();
        conexion1.conectarse();        
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);       
        modeloTabla = (DefaultTableModel) tablaJugadores.getModel();
        recogerDatosBD();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaJugadores = new javax.swing.JTable();
        botonBorrar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        botonVaciar = new javax.swing.JButton();
        cuadroApellidos = new javax.swing.JTextField();
        cuadroDNI = new javax.swing.JTextField();
        cuadroEdad = new javax.swing.JTextField();
        cuadroNombre = new javax.swing.JTextField();
        etiquetaApellidos = new javax.swing.JLabel();
        etiquetaDNI = new javax.swing.JLabel();
        etiquetaEdad = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        botonInsertar = new javax.swing.JButton();
        etiquetaFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1260, 660));
        setMinimumSize(new java.awt.Dimension(1260, 660));
        setPreferredSize(new java.awt.Dimension(1260, 660));
        setResizable(false);
        setSize(new java.awt.Dimension(1260, 660));

        panelFondo.setMaximumSize(new java.awt.Dimension(1400, 690));
        panelFondo.setMinimumSize(new java.awt.Dimension(1400, 690));
        panelFondo.setName(""); // NOI18N
        panelFondo.setPreferredSize(new java.awt.Dimension(1260, 660));
        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tablaJugadores.setFont(new java.awt.Font("Berlin Sans FB", 1, 16)); // NOI18N
        tablaJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "DNI", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaJugadores);

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 590, 340));

        botonBorrar.setText("Borrar Jugador");
        botonBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });
        panelFondo.add(botonBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 360, 180, 100));

        botonSalir.setText("Salir");
        botonSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        panelFondo.add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 490, 180, 100));

        botonVaciar.setText("Vaciar campos");
        botonVaciar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVaciarActionPerformed(evt);
            }
        });
        panelFondo.add(botonVaciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, 180, 100));
        panelFondo.add(cuadroApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 230, -1));
        panelFondo.add(cuadroDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 230, -1));
        panelFondo.add(cuadroEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 230, -1));

        cuadroNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroNombreActionPerformed(evt);
            }
        });
        panelFondo.add(cuadroNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 230, -1));

        etiquetaApellidos.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        etiquetaApellidos.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaApellidos.setText("Apellidos del jugador");
        panelFondo.add(etiquetaApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 190, -1));

        etiquetaDNI.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        etiquetaDNI.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaDNI.setText("DNI del jugador");
        panelFondo.add(etiquetaDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 160, -1));

        etiquetaEdad.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        etiquetaEdad.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaEdad.setText("Edad del jugador");
        panelFondo.add(etiquetaEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 160, -1));

        etiquetaNombre.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        etiquetaNombre.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaNombre.setText("Nombre del jugador");
        panelFondo.add(etiquetaNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 180, -1));

        botonInsertar.setText("Insertar Jugador");
        botonInsertar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });
        panelFondo.add(botonInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 180, 100));

        etiquetaFondo.setIcon(new javax.swing.ImageIcon("C:\\Users\\Brais Núñez\\Desktop\\Desarrollo de aplicaciones multiplataforma\\Programacion\\Apps personales\\JavaLearner\\src\\imagenes\\fondoSeleccion.jpg")); // NOI18N
        etiquetaFondo.setPreferredSize(new java.awt.Dimension(1260, 660));
        panelFondo.add(etiquetaFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 0, 1290, 660));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cargarArrays(){
        
        jug[0] = jugador.getNombreJug();
        jug[1] = jugador.getApellidosJug();
        jug[2] = jugador.getDniJug();
        jug[3] = jugador.getEdadJug();
        
        datosTabla[0] = cuadroNombre.getText();
        datosTabla[1] = cuadroApellidos.getText();
        datosTabla[2] = cuadroDNI.getText();
        datosTabla[3] = cuadroEdad.getText();
              
    }
    
    public void insertarJugador(){
        
        try {
            PreparedStatement consultaAct = Conexiones.conexion.prepareStatement("Insert into Jugador(nombreJug,apellidosJug,dniJug,edadJug) values(?,?,?,?)");
            
            for(int i=0; i<jug.length; i++){
            jug[i] = datosTabla[i];
            consultaAct.setString(i+1, jug[i]);           
            }            
            int comprobacion = consultaAct.executeUpdate();
            
            if (comprobacion > 0) {
                
                JOptionPane.showMessageDialog(null, "Guardado completado satisfactoriamente");
            }
            
            modeloTabla.addRow(jug);
            tablaJugadores.setModel(modeloTabla);
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Guardado erróneo");
        }        
    }
    
    public void recogerDatosBD(){
    
     try {

            PreparedStatement recoger = Conexiones.conexion.prepareStatement("Select * from Jugador");

            resultado = recoger.executeQuery();

            while (resultado.next()) {
                
                jug[0] = resultado.getString("nombreJug");
                jug[1] = resultado.getString("apellidosJug");
                jug[2] = resultado.getString("dniJug");
                jug[3] = resultado.getString("edadJug");
                
                modeloTabla.addRow(jug);
                tablaJugadores.setModel(modeloTabla);
            }
         } catch (SQLException ex) {
            System.out.println("No ha sido posible cargar la base de datos");
         }
    }
    
    public void borrarJugador(){
        
         try {
            
            
            Statement eliminar =  Conexiones.conexion.createStatement();
            eliminar.executeUpdate("DELETE from Jugador where dniJug=" + JOptionPane.showInputDialog("Introduzca el DNI del jugador que desee eliminar"));
            System.out.println("Borrado completo");

        } catch (SQLException ex) {
            System.out.println("Lo sentimos, el jugador que desea eliminar no se encuentra en la base ");
        }
    }
       
    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
         
        Conexiones.cerrarBase();
        JOptionPane.showMessageDialog(null, "Conexión terminada");
        this.dispose();
        
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVaciarActionPerformed
        
        cuadroNombre.setText("");
        cuadroApellidos.setText("");
        cuadroDNI.setText("");
        cuadroEdad.setText("");
                     
    }//GEN-LAST:event_botonVaciarActionPerformed
    
    
    
    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
             
        try {
//            int filaEscogida = tablaJugadores.getSelectedRow();
            
            st = Conexiones.conexion.createStatement();
           
              
           int comprobacion = st.executeUpdate("delete from Jugador where dniJug =" + "'"+ JOptionPane.showInputDialog("Introduzca el DNI del jugador que desea borrar")+"'");
            
//            modeloTabla.removeRow(filaEscogida);
           if (comprobacion > 0){
               JOptionPane.showMessageDialog(null, "Jugador eliminado");
           }
           else{
               JOptionPane.showMessageDialog(null, "El DNI introducido no corresponde a ningún jugador");
           }
                              
        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "Borrado erróneo" + ex.getMessage());
        }              

    }//GEN-LAST:event_botonBorrarActionPerformed

    private void cuadroNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroNombreActionPerformed
       
    }//GEN-LAST:event_cuadroNombreActionPerformed

    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        
        Conexiones con = new Conexiones();
        con.conectarse();
        cargarArrays();
        insertarJugador();
        
    }//GEN-LAST:event_botonInsertarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana1().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton botonVaciar;
    private javax.swing.JTextField cuadroApellidos;
    private javax.swing.JTextField cuadroDNI;
    private javax.swing.JTextField cuadroEdad;
    private javax.swing.JTextField cuadroNombre;
    private javax.swing.JLabel etiquetaApellidos;
    private javax.swing.JLabel etiquetaDNI;
    private javax.swing.JLabel etiquetaEdad;
    private javax.swing.JLabel etiquetaFondo;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JTable tablaJugadores;
    // End of variables declaration//GEN-END:variables
}
